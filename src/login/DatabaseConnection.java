/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import databaseContent.DBcontent;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author paul_
 */
public class DatabaseConnection extends javax.swing.JFrame {

    /**
     * Creates new form DatabaseConnection
     */
    public DatabaseConnection() {
        initComponents();
        
        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;
        // Move the window
        this.setLocation(x, y);
        databaseName.requestFocus();
        
         checkFld checker= new checkFld();
       // checkField();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        address = new javax.swing.JTextField();
        serverName = new javax.swing.JTextField();
        port = new javax.swing.JTextField();
        serverUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        serverPassword = new javax.swing.JPasswordField();
        testConnection = new javax.swing.JButton();
        saveConnection = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        databaseName = new javax.swing.JTextField();
        firstConBTN = new javax.swing.JButton();
        closeBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        serverUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverUsernameActionPerformed(evt);
            }
        });

        jLabel1.setText("Adresa serverului");

        jLabel2.setText("Numele Serverului ");

        jLabel3.setText("Portul Serverului");

        jLabel4.setText("Utilizatorul");

        jLabel5.setText("Parola");
        jLabel5.setToolTipText("");

        serverPassword.setToolTipText("");

        testConnection.setText("Testare conexiune");
        testConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testConnectionActionPerformed(evt);
            }
        });

        saveConnection.setText("Salveaza configurarea");
        saveConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveConnectionActionPerformed(evt);
            }
        });

        jLabel6.setText("Fereastra de conexiune la baza de date ");

        jLabel7.setText("Denumire baza de date");

        firstConBTN.setText("Prima conectare");
        firstConBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstConBTNActionPerformed(evt);
            }
        });

        closeBTN.setText("Inchidere");
        closeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serverName)
                            .addComponent(port)
                            .addComponent(serverUsername)
                            .addComponent(serverPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(databaseName, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addGap(154, 154, 154))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(26, 26, 26)
                                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(closeBTN))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(firstConBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveConnection)
                    .addComponent(testConnection)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6))
                    .addComponent(closeBTN))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serverUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serverPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(databaseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(testConnection)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveConnection)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstConBTN))))
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents
String connectionString = null;
    private void serverUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serverUsernameActionPerformed

    private void saveConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveConnectionActionPerformed
        // TODO add your handling code here:
       File myObj = new File("config.ini");
        try {
            if (myObj.createNewFile()) {
                System.out.println("File created: " + myObj.getName());
            } else {
                System.out.println("File already exists.");
            } } catch (IOException ex) {
            Logger.getLogger(DatabaseConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
        // "jdbc:mysql://89.42.218.232:3306/" + database;
         connectionString= "STRING=jdbc:mysql://"+address.getText()+":"+port.getText()+"/"+databaseName.getText()+"?useSSL=false;"+serverUsername.getText()+";"+
                    serverPassword.getText();
        
        
         FileWriter myWriter = null;
        try {
            myWriter = new FileWriter("config.ini");
        } catch (IOException ex) {
            Logger.getLogger(DatabaseConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            myWriter.write("BAZADEDATE="+databaseName.getText()+"\n");
            myWriter.write(connectionString);
        } catch (IOException ex) {
          //  Logger.getLogger(DatabaseConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            myWriter.close();
        } catch (IOException ex) {
           // Logger.getLogger(DatabaseConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        
        
    }//GEN-LAST:event_saveConnectionActionPerformed
  String certificates = "?verifyServerCertificate=false"
            + "&useSSL=true"
            + "&requireSSL=false";
   String user="" ;
String pass="";
String strg="";
    private void testConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testConnectionActionPerformed
//nu se poate crea numai manual baza de date  
//new DBcontent().databaseCreation(databaseName.getText(),address.getText(), port.getText(),serverUsername.getText(),serverPassword.getText());
        
        connectionString= "jdbc:mysql://"+address.getText()+":"+port.getText()+"/"+databaseName.getText()+"?useSSL=false;"+serverUsername.getText()+";"+
                    serverPassword.getText();
        System.out.println("String= " +connectionString);
 System.out.println("Connecting database...");

 String[] sp = connectionString.split(";");
strg = sp[0];
user = sp[1];
pass = sp[2];
        System.out.println("credentiale "+ user+" "+strg+" " + pass);



Statement stmt;

//        try (Connection conn = DriverManager.getConnection(url, Dbuser, password)) {
 try (Connection conn = DriverManager.getConnection(strg,user,pass)) {
            System.out.println("Database connected!");
            String message = "Database connected!";
// show a dialog message
            JOptionPane.showMessageDialog(null, message);
            
//            stmt = conn.createStatement();
//            stmt.executeQuery("create database"+databaseName.getText());
        } catch (SQLException e) {
            // throw new IllegalStateException("Cannot connect the database!", e);
            String message = e.toString();

            JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",
                    JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_testConnectionActionPerformed

    private void firstConBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstConBTNActionPerformed
        Object frame = null;
        // TODO add your handling code here:
        
        Object result = JOptionPane.showInputDialog(frame, "Enter developer password here:");
        
        if(result.equals("parttime")){
            DBcontent dBcontent = new DBcontent();
            dBcontent.databaseInsertion(strg,user,pass);
        }else{
            JOptionPane.showMessageDialog(new JFrame(), "You don't have access here, please contact you app developer", "Dialog",
                    JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_firstConBTNActionPerformed

    private void closeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBTNActionPerformed
this.hide();
new Login().show();
// TODO add your handling code here:
    }//GEN-LAST:event_closeBTNActionPerformed
private class checkFld extends Thread {
    public void run(){
        if(databaseName.getText().equals("")){
            databaseName.requestFocus();
            System.out.println("checker ");
            
        }else{
            if(databaseName.getText().equals(" "))
                databaseName.requestFocus();
        }
    }
    
}
private void checkField(KeyEvent e){
    if(databaseName.getText().equals("")){
            databaseName.requestFocus();
            System.out.println("checker ");
            
        }else{
            if(databaseName.getText().equals(" "))
                databaseName.requestFocus();
        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseConnection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseConnection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseConnection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseConnection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseConnection().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JButton closeBTN;
    private javax.swing.JTextField databaseName;
    private javax.swing.JButton firstConBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField port;
    private javax.swing.JButton saveConnection;
    private javax.swing.JTextField serverName;
    private javax.swing.JPasswordField serverPassword;
    private javax.swing.JTextField serverUsername;
    private javax.swing.JButton testConnection;
    // End of variables declaration//GEN-END:variables
}
